<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>unionfind</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>struct UnionFind&lt;Element&gt; where Element: Hashable {
    typealias Element = Element

    private var parent: [Element: Element]
    private var count: [Element: Int]

    init() {
        parent = [:]
        count = [:]
    }

    /// `v`の代表元を返す。
    ///
    /// ```
    /// var uf = HashedUnionFind&lt;Int&gt;()
    /// uf.unite(0, 1)
    /// uf.unite(0, 2)
    /// uf.unite(3, 4)
    /// assert(uf.find(0) == uf.find(1))
    /// assert(uf.find(0) == uf.find(2))
    /// assert(uf.find(3) == uf.find(4))
    /// ```
    ///
    /// - Complexity: 償却O(log n)
    mutating func find(_ v: Element) -&gt; Element {
        guard let p = parent[v] else { return v }
        if v == p {
            return v
        } else {
            let newParent = find(p)
            parent[v] = newParent
            return newParent
        }
    }

    /// 頂点`u`と頂点`v`を辺で繋ぐ。
    ///
    /// - Complexity: 償却O(log n)
    mutating func unite(_ u: Element, _ v: Element) {
        var u = find(u)
        var v = find(v)
        guard u != v else { return }
        if count[u, default: 1] &lt; count[v, default: 1] {
            swap(&amp;u, &amp;v)
        }
        count[u, default: 1] += count[v, default: 1]
        parent[v] = u
    }

    /// 頂点`u`が属する連結成分の頂点数を返す。
    ///
    /// ```
    /// var uf = HashedUnionFind&lt;Int&gt;()
    /// uf.unite(0, 1)
    /// uf.unite(0, 2)
    /// uf.unite(3, 4)
    /// assert(uf.count(0) == 3)
    /// assert(uf.count(1) == 3)
    /// assert(uf.count(2) == 3)
    /// assert(uf.count(3) == 2)
    /// assert(uf.count(4) == 2)
    /// ```
    ///
    /// - Complexity: 償却O(log n)
    mutating func count(_ u: Element) -&gt; Int {
        count[find(u), default: 1]
    }
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>396915DE-744D-4EA2-A4F2-507ABF653D22</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>UnionFind - 素集合データ構造</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
