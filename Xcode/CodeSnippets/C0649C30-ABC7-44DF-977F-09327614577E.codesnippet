<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>ruisekiwaArray2D</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>StringOrComment</string>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>extension Array2D where Element == Int {
    /// 1, 1, 1          1, 2, 3
    /// 1, 1, 1  ----&gt; 2, 4, 6
    /// 1, 1, 1          3, 6, 9
    func toRuisekiwa() -&gt; Self {
        var B = Array2D(repeating: 0, self.x, self.y)
        for h in 0 ..&lt; self.y {
            for w in 0 ..&lt; self.x {
                B[w, h] = self[w, h]
                if w &gt; 0 {
                    B[w, h] += B[w - 1, h]
                }
                if h &gt; 0 {
                    B[w, h] += B[w, h - 1]
                }
                if w &gt; 0, h &gt; 0 {
                    B[w, h] -= B[w - 1, h - 1]
                }
            }
        }
        return B
    }

    /// from: (x1, y2) から to: (x2, y2) の矩形の累積和を返す
    func ruisekiwa(from x1: Int, _ y1: Int, to x2: Int, _ y2: Int) -&gt; Element {
        let leftup = x1 == 0 || y1 == 0 ? 0 : self[x1 - 1, y1 - 1]
        let rightup = x1 == 0 ? 0 : self[x1 - 1, y2]
        let leftdown = y1 == 0 ? 0 : self[x2, y1 - 1]
        return self[x2, y2] - rightup - leftdown + leftup
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>C0649C30-ABC7-44DF-977F-09327614577E</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>2次元累積和 - Array2D</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
